---
- hosts: dev
  remote_user: ec2-user
  become: true
  vars:
    download_url: https://s3-us-west-2.amazonaws.com/avio-apics-gateway/ApicsGatewayInstaller.zip
    download_folder: /opt/oracle/binaries
    archive: "{{download_folder}}/ApicsGatewayInstaller.zip"
    user: "ec2-user"
    ## These values will passed in with the command line --extra-vars
    gateway_user: "{{gatewayuser}}"
    gateway_user_pass: "{{gatewayuserpass}}"
    gateway_manager_user: "{{gatewaymanageruser}}"
    gateway_manager_pass: "{{gatewaymanagerpass}}"
    gateway_manager_runtime_user: "{{gatewaymanagerruntimeuser}}"
    gateway_manager_runtime_pass: "{{gatewaymanagerruntimepass}}"
    client_id: "{{clientid}}"
    client_secret: "{{clientsecret}}"
    management_url: "{{managementurl}}/apiplatform/management/v1"
    gateway_id: "{{gatewayid}}"
    my_token: "{{apicstoken}}"

  tasks:
  - name: Check if APICS already installed
    stat:
      path: "{{download_folder}}/gateway/APIGateway"
    register: apics

  - name: Create Directory
    file:
      path: "{{download_folder}}/gateway"
      state: directory
      owner: ec2-user
      group: ec2-user
      recurse: yes

  - name: Download ApicsGatewayInstaller
    get_url:
      url: "{{download_url}}"
      dest: "{{archive}}"
    when: not apics.stat.exists

  - name: Unpack archive
    unarchive:
      src: "{{archive}}"
      dest: "{{download_folder}}/gateway"
      creates: "{{download_folder}}/gateway/APIGateway"
      remote_src: yes

  - name: Fix ownership
    file:
      state: directory
      path: "{{download_folder}}/gateway"
      owner: "{{user}}"
      group: "{{user}}"
      recurse: yes

  - name: Clean up
    file:
      state: absent
      path: "{{archive}}"

  - name: Install pexpect
    pip:
      name: pexpect

  - name: Copy gateway-props file
    copy:
      src: /home/ec2-user/local-gateway-props.json
      dest: /opt/oracle/local-gateway-props.json
      remote_src: yes


  - name: Call install-configure-start-join (takes a while ~8 min)
    become: false
    expect:
      command: "./APIGateway -f ../../local-gateway-props.json -a install-configure-start-join"
      chdir: "/opt/oracle/binaries/gateway/"
      timeout: 600
      responses:
        'Please enter user name for weblogic*' : "{{gateway_user}}"
        'Password*' :
          - "{{gateway_user_pass}}"
          - "{{gateway_manager_pass}}"
          - "{{gateway_manager_runtime_pass}}"
          - "{{gateway_manager_runtime_pass}}"
        'This action will now cleanup existing gateway*' : "y"
        'Please enter gateway manager user*' : "{{gateway_manager_user}}"
        'Please enter gateway manager client id*' : "{{client_id}}"
        'Please enter gateway manager client secret*' : "{{client_secret}}"
        'Please enter gateway manager runtime user*' : "{{gateway_manager_runtime_user}}"
        'Please enter gateway manager runtime client id*' : "{{client_id}}"
        'Please enter gateway manager runtime client secret*' : "{{client_secret}}"
        'Do you want to add the grant to gateway runtime user*' : "y"
        'Please enter gateway runtime user*' : "{{gateway_manager_runtime_user}}"
        'Would you like to create-join instead*' : "y"
      creates: "/opt/oracle/gateway/GATEWAY_HOME"

  - yum: name=jq

  - name : Get Nodes
    shell : 'curl -s -X GET -H "Authorization: Bearer {{my_token}}" {{management_url}}/gateways/{{gateway_id}}/nodes | jq ".items[].id"'
    register : nodes_response


  - debug :
      msg : "Success - => '{{nodes_response.stdout_lines}}'"

  - debug :
      msg : "Nodes --> {{item}}"
    with_items : "{{nodes_response.stdout_lines}}"


  - name : Update State - ACTIVE
    shell : 'curl -s -X PUT -H "Authorization: Bearer {{my_token}}" -H "Content-Type:application/json" -d ''{ "state" : "ACTIVE" }'' {{management_url}}/gateways/{{gateway_id}}/nodes/{{item}}/state'
    with_items : "{{nodes_response.stdout_lines}}"

  - debug :
      msg : "Complete!"
